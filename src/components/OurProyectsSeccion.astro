---
// src/components/ProjectsSection.astro
import { ArrowRight } from "lucide-react";
import { projects } from "../data/projects";
---

<section id="projects" class="relative bg-gradient-to-b from-gray-50 to-gray-100 dark:from-dark-800 dark:to-dark-900 py-16 md:py-24 lg:py-28 2xl:py-32 px-4 z-10 sm:px-6 lg:px-8 2xl:px-12 3xl:px-16 overflow-hidden">
  <!-- Fondo decorativo -->
  <div class="absolute inset-0 opacity-10 dark:opacity-5">
    <div class="absolute top-0 left-0 w-full h-full bg-[url('/images/texture-grid.png')] bg-[length:100px_100px]"></div>
  </div>
  <div class="absolute -bottom-20 -right-20 w-64 h-64 bg-yellow-400/10 rounded-full blur-3xl"></div>

  <div class="max-w-7xl 2xl:max-w-8xl 3xl:max-w-9xl mx-auto relative">
    <!-- Header -->
    <div class="text-center mb-12 md:mb-16 lg:mb-20 2xl:mb-24">
      <span class="inline-block px-4 py-1.5 text-xs md:text-sm 2xl:text-base font-semibold text-yellow-600 dark:text-yellow-400 bg-yellow-50/80 dark:bg-yellow-900/30 rounded-full mb-4 2xl:mb-6 tracking-wider border border-yellow-200 dark:border-yellow-800">
        PORTFOLIO
      </span>
      <h2 class="text-3xl md:text-4xl lg:text-5xl 2xl:text-6xl font-bold text-gray-900 dark:text-white mb-4 2xl:mb-6 relative inline-block">
        <span class="relative z-10">Our <span class="text-yellow-500 dark:text-yellow-400">Projects</span></span>
        <span class="absolute -bottom-2 left-0 w-full h-2 bg-yellow-400/30 dark:bg-yellow-600/30 rounded-full"></span>
      </h2>
      <div class="mx-auto w-24 h-1.5 lg:w-28 lg:h-2 2xl:w-32 2xl:h-2.5 bg-gradient-to-r from-yellow-400 to-yellow-600 dark:from-yellow-500 dark:to-yellow-400 rounded-full mb-6 2xl:mb-8"></div>
      <p class="max-w-2xl 2xl:max-w-4xl mx-auto text-gray-600 dark:text-gray-300 text-sm md:text-base lg:text-lg 2xl:text-xl">
        We take pride in our <span class="font-medium text-gray-700 dark:text-gray-200">diverse portfolio</span> of successful projects.
      </p>
    </div>

    <!-- Desktop Grid - 4 columnas -->
    <div class="hidden md:grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 gap-6 lg:gap-8 2xl:gap-10">
      {
        projects.map((project) => (
          <a 
            href={`/projects/${project.id}`}
            class="group relative overflow-hidden rounded-2xl lg:rounded-3xl shadow-lg hover:shadow-xl transition-all duration-500 h-[420px] lg:h-[480px] 2xl:h-[520px] border border-gray-200/50 dark:border-dark-700/50 project-card"
          >
            <div class="absolute inset-0 bg-black/5 group-hover:bg-black/10 transition-all duration-300 z-10"></div>
            <img
              src={project.image}
              alt={project.alt}
              class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
              loading="lazy"
              width="500"
              height="520"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-transparent flex flex-col justify-end p-6 lg:p-7 2xl:p-8">
              <div class="mb-2">
                <span class="inline-block px-3 py-1 text-xs 2xl:text-sm font-medium text-yellow-500 bg-yellow-50/30 dark:bg-yellow-900/20 rounded-full mb-2">
                  Project #{project.id}
                </span>
              </div>
              <h3 class="text-xl lg:text-2xl 2xl:text-3xl font-bold text-white mb-2 lg:mb-3">{project.title}</h3>
              <p class="text-gray-200 mb-4 text-sm lg:text-base 2xl:text-lg">{project.description}</p>
              <div class="inline-flex items-center text-yellow-400 hover:text-yellow-300 font-medium transition-colors text-sm lg:text-base 2xl:text-lg group/link">
                View details 
                <span class="ml-2 inline-flex items-center justify-center w-6 h-6 2xl:w-7 2xl:h-7 bg-yellow-500/20 group-hover/link:bg-yellow-500/30 rounded-full transition-all">
                  <ArrowRight className="w-3 h-3 2xl:w-4 2xl:h-4 transition-transform group-hover/link:translate-x-1" />
                </span>
              </div>
            </div>
          </a>
        ))
      }
    </div>

    <!-- Mobile Carousel con arrastre -->
    <div class="md:hidden relative">
      <div 
        id="mobileCarousel"
        class="flex overflow-x-auto snap-x snap-mandatory no-scrollbar pb-8 -mx-4 px-4 scroll-smooth touch-pan-x"
        style="scrollbar-width: none; -ms-overflow-style: none;"
      >
        {
          projects.map((project, index) => (
            <div 
              id={`slide-${index}`} 
              class="flex-shrink-0 w-[85vw] sm:w-[70vw] mr-6 snap-center"
            >
              <a
                href={`/projects/${project.id}`}
                class="relative block overflow-hidden rounded-xl shadow-lg h-[360px] border border-gray-200/50 dark:border-dark-700/50"
              >
                <img
                  src={project.image}
                  alt={project.alt}
                  class="w-full h-full object-cover"
                  loading="lazy"
                  width="340"
                  height="360"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent flex flex-col justify-end p-6">
                  <h3 class="text-xl font-bold text-white mb-2">{project.title}</h3>
                  <p class="text-gray-200 mb-4 text-sm">{project.description}</p>
                  <div class="inline-flex items-center text-yellow-400 hover:text-yellow-300 font-medium transition-colors text-sm">
                    View details <ArrowRight className="w-4 h-4 ml-2" />
                  </div>
                </div>
              </a>
            </div>
          ))
        }
      </div>

      <!-- Indicadores -->
      <div class="flex justify-center mt-6 space-x-2">
        {
          projects.map((_, index) => (
            <button
              onclick={`goToSlide(${index})`}
              class="w-2 h-2 rounded-full bg-gray-300 dark:bg-gray-600 transition-all duration-300 hover:bg-yellow-500 dark:hover:bg-yellow-400 indicator-dot ${index === 0 ? '!w-6 bg-yellow-500 dark:bg-yellow-400' : ''}`"
              aria-label={`Go to slide ${index + 1}`}
            ></button>
          ))
        }
      </div>
    </div>

    <!-- CTA Button -->
    <div class="text-center mt-12 md:mt-16 lg:mt-20 2xl:mt-24">
      <a 
        href="#contact-us-section" 
        class="inline-flex items-center px-6 py-3 lg:px-8 lg:py-4 2xl:px-10 2xl:py-5 bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-600 hover:to-yellow-500 text-white font-medium rounded-lg lg:rounded-xl transition-all duration-300 shadow-md hover:shadow-lg text-sm md:text-base lg:text-lg 2xl:text-xl"
      >
        Get a Quote
        <ArrowRight className="w-4 h-4 md:w-5 md:h-5 lg:w-6 lg:h-6 ml-2 transition-transform group-hover:translate-x-1" />
      </a>
    </div>
  </div>

  <style is:global>
    .no-scrollbar::-webkit-scrollbar {
      display: none;
    }
    .snap-x {
      scroll-snap-type: x mandatory;
    }
    .snap-center {
      scroll-snap-align: center;
    }
    .project-card::after {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
      transform: translate(0, 0);
      transition: transform 0.5s ease;
      pointer-events: none;
    }
    .project-card:hover::after {
      transform: translate(50%, 50%);
    }
    #mobileCarousel {
      -webkit-overflow-scrolling: touch;
    }
  </style>

  <script is:inline>
    // Carrusel con arrastre para móvil
    document.addEventListener('DOMContentLoaded', () => {
      const carousel = document.getElementById('mobileCarousel');
      const dots = document.querySelectorAll('.indicator-dot');
      let isDown = false;
      let startX;
      let scrollLeft;
      let currentIndex = 0;
      let autoScrollInterval;

      // Configurar arrastre
      carousel.addEventListener('mousedown', (e) => {
        isDown = true;
        startX = e.pageX - carousel.offsetLeft;
        scrollLeft = carousel.scrollLeft;
        pauseAutoScroll();
      });

      carousel.addEventListener('touchstart', (e) => {
        isDown = true;
        startX = e.touches[0].pageX - carousel.offsetLeft;
        scrollLeft = carousel.scrollLeft;
        pauseAutoScroll();
      });

      carousel.addEventListener('mouseleave', () => {
        isDown = false;
        resumeAutoScroll();
      });

      carousel.addEventListener('mouseup', () => {
        isDown = false;
        resumeAutoScroll();
        updateActiveDot();
      });

      carousel.addEventListener('touchend', () => {
        isDown = false;
        resumeAutoScroll();
        updateActiveDot();
      });

      carousel.addEventListener('mousemove', (e) => {
        if(!isDown) return;
        e.preventDefault();
        const x = e.pageX - carousel.offsetLeft;
        const walk = (x - startX) * 2;
        carousel.scrollLeft = scrollLeft - walk;
      });

      carousel.addEventListener('touchmove', (e) => {
        if(!isDown) return;
        e.preventDefault();
        const x = e.touches[0].pageX - carousel.offsetLeft;
        const walk = (x - startX) * 2;
        carousel.scrollLeft = scrollLeft - walk;
      });

      // Navegación por puntos
      function goToSlide(index) {
        currentIndex = index;
        const slide = carousel.children[index];
        carousel.scrollTo({
          left: slide.offsetLeft - (carousel.offsetWidth - slide.offsetWidth) / 2,
          behavior: 'smooth'
        });
        updateActiveDot();
      }

      function updateActiveDot() {
        const scrollPosition = carousel.scrollLeft;
        const slideWidth = carousel.children[0].offsetWidth;
        currentIndex = Math.round(scrollPosition / (slideWidth + 24)); // 24 = margin-right
        
        dots.forEach((dot, index) => {
          if(index === currentIndex) {
            dot.classList.add('!w-6', 'bg-yellow-500', 'dark:bg-yellow-400');
            dot.classList.remove('bg-gray-300', 'dark:bg-gray-600');
          } else {
            dot.classList.remove('!w-6', 'bg-yellow-500', 'dark:bg-yellow-400');
            dot.classList.add('bg-gray-300', 'dark:bg-gray-600');
          }
        });
      }

      // Auto-scroll
      function startAutoScroll() {
        autoScrollInterval = setInterval(() => {
          currentIndex = (currentIndex + 1) % projects.length;
          goToSlide(currentIndex);
        }, 5000);
      }

      function pauseAutoScroll() {
        clearInterval(autoScrollInterval);
      }

      function resumeAutoScroll() {
        pauseAutoScroll();
        startAutoScroll();
      }

      // Inicializar
      startAutoScroll();
      carousel.addEventListener('scroll', updateActiveDot);

      // Pausar al interactuar
      carousel.addEventListener('mouseenter', pauseAutoScroll);
      carousel.addEventListener('mouseleave', resumeAutoScroll);
      carousel.addEventListener('touchstart', pauseAutoScroll);
      carousel.addEventListener('touchend', resumeAutoScroll);
    });
  </script>
</section>