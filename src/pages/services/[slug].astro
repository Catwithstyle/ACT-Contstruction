---
// src/pages/services/[slug].astro
import Layout from "../../layouts/Layout.astro";
import { services } from "../../data/services";
import { ArrowLeft } from "lucide-react";

export async function getStaticPaths() {
  return services.map(service => ({
    params: { slug: service.slug },
    props: { service },
  }));
}

const { slug } = Astro.params;
const { service } = Astro.props;

if (!service) {
  return Astro.redirect("/404");
}
---

<Layout title={`${service.title} | Our Services`}>
  <style is:inline>
    .animate-fadein {
      animation: fadeIn 0.5s ease-out forwards;
    }
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
  </style>

  <main class="bg-white dark:bg-dark-800 min-h-screen animate-fadein">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24">
      <a
        href="/#services"
        class="inline-flex items-center text-yellow-600 dark:text-yellow-400 hover:text-yellow-700 dark:hover:text-yellow-300 mb-8 transition-colors"
      >
        <ArrowLeft className="w-5 h-5 mr-2" />
        Back to Services
      </a>

      <article class="group bg-white dark:bg-dark-700 p-8 rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 border border-gray-200 dark:border-dark-600 hover:border-yellow-400 dark:hover:border-yellow-500">
        <div class="flex items-center mb-6">
          <div class="p-3 rounded-lg bg-yellow-50 dark:bg-yellow-900/20 group-hover:bg-yellow-100 dark:group-hover:bg-yellow-900/30 transition-colors duration-300">
            <service.icon className="w-8 h-8 text-yellow-500 dark:text-yellow-400" />
          </div>
          <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white ml-4">
            {service.title}
          </h1>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <div>
            <img
              src={service.image}
              alt={service.alt}
              class="w-full h-auto rounded-xl shadow-lg"
              loading="eager"
            />
          </div>

          <div>
            <p class="text-lg text-yellow-600 dark:text-yellow-400 mb-6">
              {service.description}
            </p>

            {service.features && (
              <div class="mb-8">
                <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-5">Service Features</h3>
                <ul class="space-y-3">
                  {service.features.map((feature) => (
                    <li class="flex items-start">
                      <svg class="w-5 h-5 text-green-500 mt-0.5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                      </svg>
                      {feature}
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        </div>

        {service.stats && (
          <div class="mt-8">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-5">Service Statistics</h3>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
              {service.stats.map((stat) => (
                <div class="bg-gray-50 dark:bg-dark-600 p-4 rounded-lg text-center border border-gray-200 dark:border-dark-500">
                  <div class="text-yellow-600 dark:text-yellow-400 text-2xl font-bold mb-1">{stat.value}</div>
                  <div class="text-gray-600 dark:text-gray-400 text-sm">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        )}

        {service.details && (
          <div class="mt-8 bg-gray-50 dark:bg-dark-600 p-6 rounded-lg">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-4">Detailed Information</h3>
            <p class="text-gray-700 dark:text-gray-300">
              {service.details}
            </p>
          </div>
        )}
      </article>
    </div>
  </main>
</Layout>